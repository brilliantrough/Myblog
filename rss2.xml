<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>pezayo&#39;s Blog</title>
    <link>https://pezayo.com/</link>
    
    <atom:link href="https://pezayo.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>坚持，马上开始博客之旅</description>
    <pubDate>Sun, 10 Jul 2022 16:21:58 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>CLion-STM32开发</title>
      <link>https://pezayo.com/2022/07/10/CLion-STM32%E5%BC%80%E5%8F%91/</link>
      <guid>https://pezayo.com/2022/07/10/CLion-STM32%E5%BC%80%E5%8F%91/</guid>
      <pubDate>Sun, 10 Jul 2022 15:41:54 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;clion-stm32-openocd-pei-zhi&quot;&gt;&lt;a href=&quot;#CLion-STM32-OpenOCD配置&quot; class=&quot;headerlink&quot; title=&quot;CLion-STM32-OpenOCD配置&quot;&gt;&lt;/a&gt;CLion-STM32-OpenOCD配置&lt;a href=&quot;#clion-stm32-openocd-pei-zhi&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这个配置，恕我直言，真的过于阴间。这个 的配置前前后后我不知道配了多久，对着网上的教程进行配置。这里我将其记录下来，然后说出我的一些经验怪谈。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;配置这个东西，首先你随便上网一查都能看到需要下载 CLion（收费，但是学生免费），STM32CubeMX，以及OpenOCD。然后你还需要 gcc-arm-mingw。&lt;/p&gt;
&lt;h2 id=&quot;openocd&quot;&gt;&lt;a href=&quot;#OpenOCD&quot; class=&quot;headerlink&quot; title=&quot;OpenOCD&quot;&gt;&lt;/a&gt;OpenOCD&lt;a href=&quot;#openocd&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;直接搜索下载安装即可，然后假如环境变量即可。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="clion-stm32-openocd-pei-zhi"><a href="#CLion-STM32-OpenOCD配置" class="headerlink" title="CLion-STM32-OpenOCD配置"></a>CLion-STM32-OpenOCD配置<a href="#clion-stm32-openocd-pei-zhi" class="header-anchor">#</a></h1><blockquote><p>这个配置，恕我直言，真的过于阴间。这个 的配置前前后后我不知道配了多久，对着网上的教程进行配置。这里我将其记录下来，然后说出我的一些经验怪谈。</p></blockquote><p>配置这个东西，首先你随便上网一查都能看到需要下载 CLion（收费，但是学生免费），STM32CubeMX，以及OpenOCD。然后你还需要 gcc-arm-mingw。</p><h2 id="openocd"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a>OpenOCD<a href="#openocd" class="header-anchor">#</a></h2><p>直接搜索下载安装即可，然后假如环境变量即可。</p><h2 id="stm32cubemx"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX<a href="#stm32cubemx" class="header-anchor">#</a></h2><p>也是直接下载安装即可，至于要不要导入软件包倒也无所谓，因为在你实现工程的时候，自然而然会给你下载所需要的包。提前装好也不失为一种好的省事的选择。至于如何提前导入包直接百度即可。</p><h2 id="arm-none-eabi-gcc-g"><a href="#arm-none-eabi-gcc-g-…" class="headerlink" title="arm-none-eabi-gcc(g++ …)"></a>arm-none-eabi-gcc(g++ …)<a href="#arm-none-eabi-gcc-g" class="header-anchor">#</a></h2><p>这个下载也是直接搜索下载安装即可，然后加入环境变量</p><h2 id="pei-zhi-huan-jie"><a href="#配置环节" class="headerlink" title="配置环节"></a>配置环节<a href="#pei-zhi-huan-jie" class="header-anchor">#</a></h2><p>首先直接按照网上的各种教程将 STM32CubeMX 和 OpenOCD 都加入到 CLion 的配置里面。然后点击 test 看看是否可以识别成功。</p><p>然后可以在 CLion 的设置里面新建一个工具链其中使用之前所提到的 arm-none-eabi-gcc 和 arm-none-eabi-gdb，不过对于这里，我还是存在疑问，是否应该这样做？还是说有其他的做法，还是这种做法没什么用。因为我看到网上也是各种参差不齐的说法，也有说不用这个 gdb 直接用 bundled gdb 就行的，看得我也晕了。。。</p><p>但就我自己的体验而言，好像这都没什么大用。我甚至都用的是 ninja。程序也能跑起来，就没管了。所以重点还是在后面怎么无脑的机械式的生成能跑，只管自己编写逻辑代码的工程。</p><h2 id="chuang-jian-yi-ge-neng-pao-de-gong-cheng"><a href="#创建一个能跑的工程" class="headerlink" title="创建一个能跑的工程"></a>创建一个能跑的工程<a href="#chuang-jian-yi-ge-neng-pao-de-gong-cheng" class="header-anchor">#</a></h2><p>直接 CLion 中新建一个工程，起一个名字，便是新建了一个 文件夹。创建的过程中肯定是选择 STM32 的那个选项啦。</p><p>然后 CLion 会自动生成一个同样工程名的 .ioc 文件，这个文件是用 STM32CubeMX 来打开编辑的。你直接选中然后用 STM32CubeMX 打开就行了，然后进行属于 STM32CubeMX 的操作环节就可以了。这里最后会有一个文件夹和名字的设置，加入这里自己又设置了其他名字，最后这个 .ioc 文件的名称会被这个覆盖，变成这个名字，不过也没什么大碍。</p><p>这里一定要选择 STM32CubeIDE 的模式，不能选择 MDK-ARM 的模式，不然就变成了 Keil 了。然后生成，也就是 generate code，生成好后，会出现 Core 和 Drivers的文件夹以及其他的一些文件。</p><p>回到 CLion，他会要你选择一个 cfg，这里的 cfg，我看网上说的，各个都说的轻飘飘的。我也看的云里雾里，不清楚。反正他们的意思是这个文件并不太重要。然而事实也确实是如此。我们只需要关注文件里的两个，一个是 Interface 下的调试器。像我用的是 stlink，所以里面的就是 <code>source [find interface/stlink.cfg]</code>，不得不说，stlink 这个调试器是真的无脑，而且下载速度快。除此之外还有一个 target 里面的文件，叫你选择一个单片机处理器相关的文件。直接看型号就行。像我用的探索者板子，芯片是 stm32f407ZGT6，所以这里的配置就是<code>source [find target/stm32f4x.cfg]</code></p><p>当然上面这么多，都不是自己配的，我就是直接在回到 CLion 的界面中选择了 stm32f4discovery.cfg 的选项就可以了。里面就已经有这两行给你配好了。也就是说不用自己再去配了。</p><p><strong>这里最神奇</strong>，也就是说，从开始创建工程到现在，没有自己额外再去配的部分了，都是直接选择。到了这里，那个编译选项，工具链那个地方（就是 CLion 右上角的图标）自然而然就有了一个锤子样的符号（Build）和 OpenOCD 的一个 configuration ，并且 run 和 debug 都是亮着的，说明是可以直接点击开始跑的。这时候你再点开 Edit configuration ，你就能看到里面已经给你配好了，也就是说，这里好像和你之前的那个配置工具链没有什么关系。所以这里我自己也不太清晰，但是程序能跑就行。</p><p>这里你再点击编译，点击下载，就能成功下载了。至此，我们也就云里雾里的成功配置好，并且程序能跑了。</p><h2 id="gong-cheng-yi-zhi"><a href="#工程移植" class="headerlink" title="工程移植"></a>工程移植<a href="#gong-cheng-yi-zhi" class="header-anchor">#</a></h2><p>工程移植还是比较麻烦的。直接复制粘贴会出现我的配置文件选用的是原来文件夹里的。然后经过一番倒腾，我发现了一个能行的通的方法。</p><p>首先不能直接复制工程，不然后面会很混乱，到底哪个是哪个工程的配置。我们这里应该要新建一个工程，自己取名字等等。</p><p>然后新建完一个工程后他会叫你打开并编辑 .ioc 文件，这里就不急，直接把他生成的这个给删掉，然后从原来的工程里把那个复制过来，注意，建议把这个 .ioc 文件名字改成现在工程的名字。不然又乱了。。。。</p><p>注意这里很重要，现在要直接用这个文件生成代码，不能直接把代码从原来的工程搬过来。一定要自己这边先生成空的模板代码。</p><p>生成完模板代码后，再把原来工程中带有我们的编写信息的代码文件，比如 main.c，maic.h以及其他我们自己的写的头文件和源文件。仅仅把这些我们自己写的文件移植过来。</p><p>这时候我们还需要取重新加载这个 CMake 工程。右键 CLion 中的工程文件夹就有这个选项了。</p><p>这时候，进行编译，并且进行下载，就能正常下载程序了。</p><p>大功告成！</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/software/">software</category>
      
      
      <category domain="https://pezayo.com/tags/STM32/">STM32</category>
      
      <category domain="https://pezayo.com/tags/CLion/">CLion</category>
      
      
      <comments>https://pezayo.com/2022/07/10/CLion-STM32%E5%BC%80%E5%8F%91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>本博客配置记录</title>
      <link>https://pezayo.com/2022/06/25/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</link>
      <guid>https://pezayo.com/2022/06/25/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</guid>
      <pubDate>Sat, 25 Jun 2022 14:18:35 GMT</pubDate>
      
      <description>关于本博客，我在 about 中也已经写过。hexo 虽然简单傻瓜，但还是有很多细枝末节。本着最开始开这个博客的初衷。我决定把hexo的博客再记录一遍。可能会漏掉很多。那倒时候再说。哈哈</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="hexo-kuang-jia"><a href="#Hexo-框架" class="headerlink" title="Hexo 框架"></a>Hexo 框架<a href="#hexo-kuang-jia" class="header-anchor">#</a></h1><p>我的这个 Hexo 是托管在 Github 上，这个特点我也已经在 about 中说过了。速度还是奇慢无比，但我还是决定不换了。阻力太大，动力太小。哈哈。</p><p>记住这么几个文件，_config.yml 和 source&#x2F;_data&#x2F;styles.styl。</p><h2 id="mu-lu-dao-hang-wen-ti"><a href="#目录导航问题" class="headerlink" title="目录导航问题"></a>目录导航问题<a href="#mu-lu-dao-hang-wen-ti" class="header-anchor">#</a></h2><p>目录导航我之前忘了是在哪里配置的了。但这个不重要，很简单。但是有个让我很恼火的就是这个侧边目录无法进行导航。打开 F12 的开发者界面显示报错。我也看不懂。在 Github 上看到这个 Issue，但是上面提供的解决方法是将一个 js 文件进行改动。但是改动后的正确的 js 脚本，就是我这个。所以我就迷惑了。</p><p>后来在这个大佬的博客里找到，这个大佬也是用 Hexo 的，看来也是踩过许多坑。这个<a href="https://convivae.top/posts/hexo-bo-ke-cai-keng/#%E6%96%B9%E6%B3%95-2">解决方法</a>是将 node_modules\hexo-toc\lib\filter.js 中的第29到31行注释，而将原本被注释的28行取消注释。然后重新部署博客，立竿见影，马上就能进行侧边的目录导航。欢喜！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$title.<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>, id);</span><br><span class="line"><span class="comment">// $title.children(&#x27;a&#x27;).remove();</span></span><br><span class="line"><span class="comment">// $title.html( &#x27;&lt;span id=&quot;&#x27; + id + &#x27;&quot;&gt;&#x27; + $title.html() + &#x27;&lt;/span&gt;&#x27; );</span></span><br><span class="line"><span class="comment">// $title.removeAttr(&#x27;id&#x27;);</span></span><br></pre></td></tr></table></figure><h2 id="bei-jing-tu-pian-fu-dong-wen-ti"><a href="#背景图片浮动问题" class="headerlink" title="背景图片浮动问题"></a>背景图片浮动问题<a href="#bei-jing-tu-pian-fu-dong-wen-ti" class="header-anchor">#</a></h2><p>我设置了背景图片浮动，也就是说背景图片只占用一页，使用滚轮下滑背景图片会跟着被划上去，但是现在表现为有些地方是这种效果，比如我电脑上的 Microsoft Edge 和 Google Chrome 都可以。但我室友的电脑上的QQ Browser 和 华为浏览器就不行。即背景图被固定住，不会随着页眉滑动。以及移动端进行查看时也会出现固定的情况。</p><p>于是我的解决方案是，干脆就将背景图片设置成固定的好了。现在无论哪里都是统一的固定住的模样了。耶比耶比~</p><h1 id="next-zhu-ti"><a href="#Next-主题" class="headerlink" title="Next 主题"></a>Next 主题<a href="#next-zhu-ti" class="header-anchor">#</a></h1><p>我还是用了 Next 主题。显然我也不想换。主题换起来会让我觉得阻力巨大。srds，我还是很憧憬 butterfly 主题的。Next 主题有个不好的地方是主页不能够放一些图片，颜色也单调，显得这个博客过于的拘谨严肃了。而 butterfly 就挺好了。</p><p>Next 下的文件主要是 themes&#x2F;next&#x2F;_config.yml。</p><h2 id="bian-kuang-yin-ying"><a href="#边框、阴影" class="headerlink" title="边框、阴影"></a>边框、阴影<a href="#bian-kuang-yin-ying" class="header-anchor">#</a></h2><p>此处省略许多字。。。</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/record/">record</category>
      
      
      <category domain="https://pezayo.com/tags/useful/">useful</category>
      
      <category domain="https://pezayo.com/tags/hexo/">hexo</category>
      
      
      <comments>https://pezayo.com/2022/06/25/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Altium Designer使用技巧</title>
      <link>https://pezayo.com/2022/06/03/Altium-Designer%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <guid>https://pezayo.com/2022/06/03/Altium-Designer%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <pubDate>Thu, 02 Jun 2022 18:38:43 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;altium-designer-gai-shu&quot;&gt;&lt;a href=&quot;#Altium-Designer-概述&quot; class=&quot;headerlink&quot; title=&quot;Altium Designer 概述&quot;&gt;&lt;/a&gt;Altium Designer 概述&lt;a href=&quot;#altium-designer-gai-shu&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;AD 这个软件很不错。。。。&lt;/p&gt;
&lt;h1 id=&quot;feng-zhuang-ji-qiao&quot;&gt;&lt;a href=&quot;#封装技巧&quot; class=&quot;headerlink&quot; title=&quot;封装技巧&quot;&gt;&lt;/a&gt;封装技巧&lt;a href=&quot;#feng-zhuang-ji-qiao&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;画封装可以多个component在一个schLib中，同样pcbLib 中也可以有多个&lt;/p&gt;
&lt;h1 id=&quot;yuan-li-tu-ji-qiao&quot;&gt;&lt;a href=&quot;#原理图技巧&quot; class=&quot;headerlink&quot; title=&quot;原理图技巧&quot;&gt;&lt;/a&gt;原理图技巧&lt;a href=&quot;#yuan-li-tu-ji-qiao&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="altium-designer-gai-shu"><a href="#Altium-Designer-概述" class="headerlink" title="Altium Designer 概述"></a>Altium Designer 概述<a href="#altium-designer-gai-shu" class="header-anchor">#</a></h1><p>AD 这个软件很不错。。。。</p><h1 id="feng-zhuang-ji-qiao"><a href="#封装技巧" class="headerlink" title="封装技巧"></a>封装技巧<a href="#feng-zhuang-ji-qiao" class="header-anchor">#</a></h1><p>画封装可以多个component在一个schLib中，同样pcbLib 中也可以有多个</p><h1 id="yuan-li-tu-ji-qiao"><a href="#原理图技巧" class="headerlink" title="原理图技巧"></a>原理图技巧<a href="#yuan-li-tu-ji-qiao" class="header-anchor">#</a></h1><h1 id="pcb-ji-qiao"><a href="#PCB-技巧" class="headerlink" title="PCB 技巧"></a>PCB 技巧<a href="#pcb-ji-qiao" class="header-anchor">#</a></h1><h2 id="pu-tong"><a href="#铺铜" class="headerlink" title="铺铜"></a>铺铜<a href="#pu-tong" class="header-anchor">#</a></h2><p>铺铜中的技巧在于重新铺铜和抠铜</p><p>重新铺铜只需选中铜区然后分别按下T + G + R，三个键，一定要英文模式下（AD所有快捷键都是在英文模式下）</p><p>扣除不必要的铜但又要通过 DRC 可以先画一个矩形，画完后直接按下T + V + T ，即选中Create Cutout from selected primitives，产生铺铜的一个边界，然后在删除矩形重新铺铜即可。会在原来矩形的地方留下一个虚线框。</p><h2 id="tu-ceng"><a href="#图层" class="headerlink" title="图层"></a>图层<a href="#tu-ceng" class="header-anchor">#</a></h2><p>有 Mechanical 层和 Keep-Out 层。一个表示机械物理的边界，一个表示 PCB 上电气的边界。还有 Top Overlay 层，即丝印层。Top Solder 层 （阻焊层）</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/casual/">casual</category>
      
      
      <category domain="https://pezayo.com/tags/useful/">useful</category>
      
      
      <comments>https://pezayo.com/2022/06/03/Altium-Designer%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>对于ssh的一些记录。。</title>
      <link>https://pezayo.com/2022/06/02/%E5%AF%B9%E4%BA%8Essh%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95%E3%80%82%E3%80%82/</link>
      <guid>https://pezayo.com/2022/06/02/%E5%AF%B9%E4%BA%8Essh%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95%E3%80%82%E3%80%82/</guid>
      <pubDate>Thu, 02 Jun 2022 12:34:18 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;ssh-gai-shu&quot;&gt;&lt;a href=&quot;#SSH-概述&quot; class=&quot;headerlink&quot; title=&quot;SSH 概述&quot;&gt;&lt;/a&gt;SSH 概述&lt;a href=&quot;#ssh-gai-shu&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;ssh 本质是 Secure Shell ，ssh协议安全，可靠，有效。现在使用量大，普遍。比如我就在用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH 为 [Secure Shell](&lt;a href=&quot;https://baike.baidu.com/item/Secure&quot;&gt;https://baike.baidu.com/item/Secure&lt;/a&gt; Shell) 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是较可靠，专为&lt;a href=&quot;https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/1071998&quot;&gt;远程登录&lt;/a&gt;会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。&lt;a href=&quot;https://baike.baidu.com/item/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF/7091372&quot;&gt;SSH客户端&lt;/a&gt;适用于多种平台。几乎所有UNIX平台—包括&lt;a href=&quot;https://baike.baidu.com/item/HP-UX&quot;&gt;HP-UX&lt;/a&gt;、&lt;a href=&quot;https://baike.baidu.com/item/Linux&quot;&gt;Linux&lt;/a&gt;、&lt;a href=&quot;https://baike.baidu.com/item/AIX&quot;&gt;AIX&lt;/a&gt;、&lt;a href=&quot;https://baike.baidu.com/item/Solaris/3517&quot;&gt;Solaris&lt;/a&gt;、Digital &lt;a href=&quot;https://baike.baidu.com/item/UNIX&quot;&gt;UNIX&lt;/a&gt;、&lt;a href=&quot;https://baike.baidu.com/item/Irix&quot;&gt;Irix&lt;/a&gt;，以及其他平台，都可运行SSH。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上来自&lt;a href=&quot;https://baike.baidu.com/item/SSH/10407&quot;&gt;百度百科&lt;/a&gt; （严谨）&lt;/p&gt;
&lt;p&gt;关于 SSH 的使用还是相对比较麻烦的。还是一样的总是忘，忘了查，查了记，记了忘。并且每次都会回到最开始的理解，即我后来即使有了自己的一定理解过后，还是会忘。。。。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="ssh-gai-shu"><a href="#SSH-概述" class="headerlink" title="SSH 概述"></a>SSH 概述<a href="#ssh-gai-shu" class="header-anchor">#</a></h1><p>ssh 本质是 Secure Shell ，ssh协议安全，可靠，有效。现在使用量大，普遍。比如我就在用。</p><blockquote><p>SSH 为 [Secure Shell](<a href="https://baike.baidu.com/item/Secure">https://baike.baidu.com/item/Secure</a> Shell) 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是较可靠，专为<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/1071998">远程登录</a>会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。<a href="https://baike.baidu.com/item/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF/7091372">SSH客户端</a>适用于多种平台。几乎所有UNIX平台—包括<a href="https://baike.baidu.com/item/HP-UX">HP-UX</a>、<a href="https://baike.baidu.com/item/Linux">Linux</a>、<a href="https://baike.baidu.com/item/AIX">AIX</a>、<a href="https://baike.baidu.com/item/Solaris/3517">Solaris</a>、Digital <a href="https://baike.baidu.com/item/UNIX">UNIX</a>、<a href="https://baike.baidu.com/item/Irix">Irix</a>，以及其他平台，都可运行SSH。</p></blockquote><p>以上来自<a href="https://baike.baidu.com/item/SSH/10407">百度百科</a> （严谨）</p><p>关于 SSH 的使用还是相对比较麻烦的。还是一样的总是忘，忘了查，查了记，记了忘。并且每次都会回到最开始的理解，即我后来即使有了自己的一定理解过后，还是会忘。。。。</p><h1 id="ssh-de-yi-xie-pei-zhi-ji-lu-he-fang-fa"><a href="#SSH-的一些配置记录和方法" class="headerlink" title="SSH 的一些配置记录和方法"></a>SSH 的一些配置记录和方法<a href="#ssh-de-yi-xie-pei-zhi-ji-lu-he-fang-fa" class="header-anchor">#</a></h1><h2 id="mu-lu"><a href="#目录" class="headerlink" title="目录"></a>目录<a href="#mu-lu" class="header-anchor">#</a></h2><p>SSH 在操作系统中的目录形式都表现为有一个 <code>~/.ssh</code> 的目录。Linux 下目录即为使用者家目录下，Windows 中则为 <code>C:\Users\你的用户名</code> 这个目录下。在这个.ssh 目录中会有一些必要的配置文件之类的一些东西存储在其中。且操作系统有关 SSH 的任何操作和记录都在其中，与其他无关。</p><h2 id="wen-jian"><a href="#文件" class="headerlink" title="文件"></a>文件<a href="#wen-jian" class="header-anchor">#</a></h2><p>.ssh 目录下的文件主要是这些（至少我的操作系统上用到并产生的文件是这些）</p><ol><li>config </li><li>id_rsa.pub&#x2F;id_rsa</li><li>know_hosts&#x2F;know_hosts.old</li><li>authorized_keys</li></ol><p>其中 config 是一些配置，是关于多个 ssh 目标时使用 config 来进行区分。 id_rsa 是本机的私有密钥，pub 后缀则是公钥。传输认证时服务器事先存储主机（客户机）的公钥，然后主机传输私钥进行请求，服务器根据存储的公钥进行识别。authorized_keys 作用于服务器，识别标记主机，使得主机在每次请求连接时都不用再输入密码。</p><p>其中 id_rsa 可以用 <code>genkey</code> 命令生成。我在Linux中在配置Git时使用了这个，但是锁定的是我的 Git 邮箱账户，而非我的 Linux 系统主机。当时使用的命令为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure><p>使用的便是我的邮箱，后来我又使用了<code>ssh-keygen</code> 直接生成了主机名字的 id_rsa.pub&#x2F;id_rsa 的密钥对。</p><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config<a href="#config" class="header-anchor">#</a></h2><p>config 的具体配置如下。<strong>一般情况下要将 git 的 User 设置为 git 或者干脆不设置</strong>，才可以正常运行，我试过将 User 改为我的 github，gitee 帐号对应的用户后无法正常工作。貌似也确实是这样，估计是我的用户名其实相当于是github下的一个路径而已。因为就github和gitee的提示而言，他们都是<a href="mailto:&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#x6d;</a>&#x2F;username&#x2F;project.git 的路径。所以类比于 User@HostName ，这里也应该是填写 git。目前还是一种自己的猜测。</p><p>如果连这个 config 都不进行设置的话，在使用 ssh 的时候将会出现permission denied (Publickey)  的报错。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">Host gitee.com</span><br><span class="line">  HostName gitee.com</span><br><span class="line">  User git</span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa_gitee</span><br></pre></td></tr></table></figure><p>可以使用<code>ssh -vT github.com/gitee.com</code> 或者<code>ssh github.com/gitee.com</code> 来进行验证。以下是直接使用ssh进行测试连接的。其中的第一行PTY allocation request failed on channel 0暂时还不清楚。有待后续研究试错。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$&gt; ssh git@github.com</span><br><span class="line">PTY allocation request failed on channel 0</span><br><span class="line">Hi xxx(你的用户名)! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br><span class="line">$&gt; ssh github.com</span><br><span class="line">PTY allocation request failed on channel 0</span><br><span class="line">Hi xxx(你的用户名)! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre></td></tr></table></figure><p>其中具体参数的讲解可以看看库这个<a href="https://zhuanlan.zhihu.com/p/35922004">某乎的链接</a> 。</p><p>其中上面的Host 类似于是一个别名，Host 相当于是 User@HostName。例如这里面 Host 的gitee.com 就相当于是 <a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#101;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#101;&#x65;&#x2e;&#x63;&#x6f;&#109;</a> 。假如是一个远程主机的话就可以写<strong>用户名@主机名</strong>了。比如我的虚拟机的用户名，和我虚拟机的主机名，填写上去是可以正常运行的。</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/record/">record</category>
      
      
      <category domain="https://pezayo.com/tags/useful/">useful</category>
      
      <category domain="https://pezayo.com/tags/ssh/">ssh</category>
      
      
      <comments>https://pezayo.com/2022/06/02/%E5%AF%B9%E4%BA%8Essh%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95%E3%80%82%E3%80%82/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>居家必备奇技淫巧</title>
      <link>https://pezayo.com/2022/05/28/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</link>
      <guid>https://pezayo.com/2022/05/28/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</guid>
      <pubDate>Sat, 28 May 2022 11:33:30 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;shuo-zai-qian-mian&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;a href=&quot;#shuo-zai-qian-mian&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;之所以写这篇文档是为了记录自己到底做了多少优化，目前我自己做的优化我已经快要麻木了。一般今天优化了我的生产环境之后，马上忙其他的事情去了，然后过了一个多星期回来再看，已经完全看不懂了。记录记录，一定要记录。就像代码一定要写注释一样。。。&lt;/p&gt;
&lt;h1 id=&quot;visual-studio-code&quot;&gt;&lt;a href=&quot;#Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio Code&quot;&gt;&lt;/a&gt;Visual Studio Code&lt;a href=&quot;#visual-studio-code&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;remote-ssh&quot;&gt;&lt;a href=&quot;#Remote-SSH&quot; class=&quot;headerlink&quot; title=&quot;Remote SSH&quot;&gt;&lt;/a&gt;Remote SSH&lt;a href=&quot;#remote-ssh&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;首先当然是vscode的远程连接功能啦，不过我这是用来远程连接虚拟机的。但也不是远程，毕竟虚拟机就在我电脑上跑着，不过能在Windows下用vscode来操作虚拟机里的文件代码等当然是最香的啦&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="shuo-zai-qian-mian"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面<a href="#shuo-zai-qian-mian" class="header-anchor">#</a></h1><p>之所以写这篇文档是为了记录自己到底做了多少优化，目前我自己做的优化我已经快要麻木了。一般今天优化了我的生产环境之后，马上忙其他的事情去了，然后过了一个多星期回来再看，已经完全看不懂了。记录记录，一定要记录。就像代码一定要写注释一样。。。</p><h1 id="visual-studio-code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code<a href="#visual-studio-code" class="header-anchor">#</a></h1><h2 id="remote-ssh"><a href="#Remote-SSH" class="headerlink" title="Remote SSH"></a>Remote SSH<a href="#remote-ssh" class="header-anchor">#</a></h2><p>首先当然是vscode的远程连接功能啦，不过我这是用来远程连接虚拟机的。但也不是远程，毕竟虚拟机就在我电脑上跑着，不过能在Windows下用vscode来操作虚拟机里的文件代码等当然是最香的啦</p><p>这个remote ssh 我是根据官网来实现的，具体怎样的我还真忘了。反正根据官网来准没错。并且这个在我本地磁盘上的虚拟机还表现为我在Windows上可以直接通过 ssh 我的 Username@MachineName 得到，不存在解析失败啥的。神奇，但我不懂。有关于 ssh 的我可能还需要专门开一篇文档来讲一讲记录一下我的电脑上的养蛊行为</p><p>总之我目前实现的功能是直接可以在 vscode 中点击打开远程连接，然后就会自动跳出我的虚拟机的名字 pezayo ，然后点击后就可以连接到我的虚拟机进行操作。</p><h2 id="git"><a href="#Git" class="headerlink" title="Git"></a>Git<a href="#git" class="header-anchor">#</a></h2><p>现在我又使用vscode进行了 Git 的操作，好吧，比较简单，无脑下插件就行。然后只要我打开的文件夹已经<code>git init</code>过了有 .git 这个隐藏文件夹之后，就能自动识别到并通过可视化的方式方便我提交工作区的文件和目录。</p><h1 id="github"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub<a href="#github" class="header-anchor">#</a></h1><h2 id="ssh-key"><a href="#SSH-Key" class="headerlink" title="SSH Key"></a>SSH Key<a href="#ssh-key" class="header-anchor">#</a></h2><p>GitHub上使用 SSH 已经是非常普遍的了，人均如此，对着任何一个教程或者博客来一遍就会了，主要就是一个公钥的赋值粘贴罢了，然后用私钥来进行握手。</p><p>这样就可以实现本地仓库与 GitHub 远程仓库之间的连接了。</p><h2 id="action"><a href="#Action" class="headerlink" title="Action"></a>Action<a href="#action" class="header-anchor">#</a></h2><p>GitHub上具有 Action 的功能，算是一个在线的资源平台，在上面你可以配置你想要的环境，运行你想要代码，相当于一个服务器在帮你托管运行东西，还不收你钱的。我目前也不会用这个，主要是 fork 了 @kotty 大佬的项目用来每天的自动打卡。</p><p>但是打卡脚本寄了。期待其他大佬的脚本的出炉，俺要叉（fork）！！</p><h1 id="ci-bo-ke-hexo"><a href="#此博客-Hexo" class="headerlink" title="此博客 Hexo"></a>此博客 Hexo<a href="#ci-bo-ke-hexo" class="header-anchor">#</a></h1><h2 id="cha-tu"><a href="#插图" class="headerlink" title="插图"></a>插图<a href="#cha-tu" class="header-anchor">#</a></h2><p>参见我的另一篇文档写了关于Hexo中插图的问题和现象。有点哪里都不太好的感觉。</p><h2 id="feng-mian-x2f-zhu-ti"><a href="#封面-x2F-主题" class="headerlink" title="封面&#x2F;主题"></a>封面&#x2F;主题<a href="#feng-mian-x2f-zhu-ti" class="header-anchor">#</a></h2><p>暂时挑了一个外太空的背景图片当封面。真正的封面无法使用 next 实现，next 不支持封面的展示。butterfly 可以有，像我认识的其他一些大佬博客 比如 <a href="https://ydjsir.com.cn/">@ydjsir</a> 的就是butterfly 主题可以支持封面。呜呜呜，这就比我的博客好看多了。摆烂摆烂（咱理不直气也壮）</p><h1 id="matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a>Matlab<a href="#matlab" class="header-anchor">#</a></h1><h2 id="live-script"><a href="#Live-Script" class="headerlink" title="Live Script"></a>Live Script<a href="#live-script" class="header-anchor">#</a></h2><p>这个实时脚本之前一直被我忽略的，现在看来还是挺香的，有着Jupyter Notebook 的感觉。支持碎片化的运行。还能在里面写Markdown ，巨香无比的感觉</p><p>另，其还支持导出，导出PDF， Latex等，不过这个导出不能算是实时脚本的功能。但能导出Latex还是蛮香的，起码代码可以直接白嫖过去，不用自己那么费手去写</p><h1 id="latex"><a href="#Latex" class="headerlink" title="Latex"></a>Latex<a href="#latex" class="header-anchor">#</a></h1><h2 id="latexmk"><a href="#latexmk" class="headerlink" title="latexmk"></a>latexmk<a href="#latexmk" class="header-anchor">#</a></h2><p>这个在我另一篇专门讲述 latex 小细节的地方有讲到，挺好的一个工具，这个并不是CTAN官方发明的，是别人投稿的，早已被收录。感谢作者，救我小命。</p><h1 id="qt-creator"><a href="#Qt-Creator" class="headerlink" title="Qt Creator"></a>Qt Creator<a href="#qt-creator" class="header-anchor">#</a></h1><h2 id="ui"><a href="#ui" class="headerlink" title="ui"></a>ui<a href="#ui" class="header-anchor">#</a></h2><p>这个也不是什么新鲜东西，基本必备的一个存在，直接自己想加什么就拖上去就可以。不过假如你是大佬的话，可以去手搓 ui ，这样就不会有什么构造函数上的大坑了（不清楚初始化 ui 时其背后做了什么）毕竟我也曾有幸掉进了多线程的大坑中，在多线程中，一个进行赋值的对象，ui有没有初始化调用构造函数居然影响着程序的报错。</p><p>最后我的吊儿郎当的程序（C++写C代码）还是靠着 bug 挺过来了。</p><h1 id="microsoft-edge"><a href="#Microsoft-Edge" class="headerlink" title="Microsoft Edge"></a>Microsoft Edge<a href="#microsoft-edge" class="header-anchor">#</a></h1><h2 id="she-zhi"><a href="#设置" class="headerlink" title="设置"></a>设置<a href="#she-zhi" class="header-anchor">#</a></h2><p>当然要把主页设置为高贵的bing啦（虽然我现在把新标签页默认搜索引擎设置为了Google）</p><p>另外新标签页使用了infinity插件进行管理，还挺好用的，虽然之前崩过几次，但现在一直没崩过了，体验不错。</p><h2 id="kuo-zhan-extensions"><a href="#扩展（extensions）" class="headerlink" title="扩展（extensions）"></a>扩展（extensions）<a href="#kuo-zhan-extensions" class="header-anchor">#</a></h2><h3 id="ublock-origin"><a href="#ublock-origin" class="headerlink" title="ublock origin"></a>ublock origin<a href="#ublock-origin" class="header-anchor">#</a></h3><p>广告劫持阻拦，巨爽无比</p><h3 id="you-hou-tampermonkey"><a href="#油猴（TamperMonkey）" class="headerlink" title="油猴（TamperMonkey）"></a>油猴（TamperMonkey）<a href="#you-hou-tampermonkey" class="header-anchor">#</a></h3><p>具有大量脚本，使用非常爽。脚本大概也类似于插件。有去广告，免翻页，白嫖VIP内容等</p><h3 id="jian-yue-simpleread"><a href="#简阅（SimpleRead）" class="headerlink" title="简阅（SimpleRead）"></a>简阅（SimpleRead）<a href="#jian-yue-simpleread" class="header-anchor">#</a></h3><p>可以提取html页面中的核心的 markdown 部分的内容，然后除去其他所有元素，仅仅保留 markdown，阅读体验直接plus, 非常适用于某乎，某CSDN，某博客园。另外还可以自定义提取后的markdown的显示内容。方便，用起来体验绝佳。</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/record/">record</category>
      
      
      <category domain="https://pezayo.com/tags/useful/">useful</category>
      
      
      <comments>https://pezayo.com/2022/05/28/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>没有你（快捷键）我怎么活</title>
      <link>https://pezayo.com/2022/05/28/%E6%B2%A1%E6%9C%89%E4%BD%A0%EF%BC%88%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%89%E6%88%91%E6%80%8E%E4%B9%88%E6%B4%BB/</link>
      <guid>https://pezayo.com/2022/05/28/%E6%B2%A1%E6%9C%89%E4%BD%A0%EF%BC%88%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%89%E6%88%91%E6%80%8E%E4%B9%88%E6%B4%BB/</guid>
      <pubDate>Sat, 28 May 2022 10:58:09 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;kuai-jie-jian-yi-lan&quot;&gt;&lt;a href=&quot;#快捷键一览&quot; class=&quot;headerlink&quot; title=&quot;快捷键一览&quot;&gt;&lt;/a&gt;快捷键一览&lt;a href=&quot;#kuai-jie-jian-yi-lan&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;随着我使用的 IDE 增多，如CLion，Pycharm，Visual Studio Code （也许算个IDE， 说不定呢），Jupyter notebook，除此之外还有一些终端命令行工具啥的，其中需要用到许多快捷键，这些快捷键的使用能够大大提高我的效率。嘿嘿~&lt;/p&gt;
&lt;p&gt;但是问题来了，有些快捷键我很难记得住，表现为，我不常用真的记不住，我有时候会高强度使用但过段时间没用忘了等等。虽然可以通过上网 CSDN 等一下子能查到，但每次都这样让我巨恼火。于是决定写个文档记录下来我可能会忘记的快捷键。像Ctrl C or V 这种就不用记录下来了。~~~毕竟用的。。。嘿嘿。&lt;/p&gt;
&lt;h2 id=&quot;visual-studio-code&quot;&gt;&lt;a href=&quot;#Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio Code&quot;&gt;&lt;/a&gt;Visual Studio Code&lt;a href=&quot;#visual-studio-code&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;打开选项搜索栏： &lt;code&gt;F1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注释当前行（选中行）： &lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找： &lt;code&gt;Ctrl + F&lt;/code&gt; ；查找后全部替换： &lt;code&gt; Ctrl + Alt + Enter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;上下移动当前行（选中行）： &lt;code&gt;Alt + Enter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开终端： &lt;code&gt;Ctrl + ` &lt;/code&gt;； 新建终端： &lt;code&gt;Ctrl + Shift ` &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="kuai-jie-jian-yi-lan"><a href="#快捷键一览" class="headerlink" title="快捷键一览"></a>快捷键一览<a href="#kuai-jie-jian-yi-lan" class="header-anchor">#</a></h1><p>随着我使用的 IDE 增多，如CLion，Pycharm，Visual Studio Code （也许算个IDE， 说不定呢），Jupyter notebook，除此之外还有一些终端命令行工具啥的，其中需要用到许多快捷键，这些快捷键的使用能够大大提高我的效率。嘿嘿~</p><p>但是问题来了，有些快捷键我很难记得住，表现为，我不常用真的记不住，我有时候会高强度使用但过段时间没用忘了等等。虽然可以通过上网 CSDN 等一下子能查到，但每次都这样让我巨恼火。于是决定写个文档记录下来我可能会忘记的快捷键。像Ctrl C or V 这种就不用记录下来了。~~~毕竟用的。。。嘿嘿。</p><h2 id="visual-studio-code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code<a href="#visual-studio-code" class="header-anchor">#</a></h2><ul><li>打开选项搜索栏： <code>F1</code></li><li>注释当前行（选中行）： <code>Ctrl + /</code></li><li>查找： <code>Ctrl + F</code> ；查找后全部替换： <code> Ctrl + Alt + Enter</code></li><li>上下移动当前行（选中行）： <code>Alt + Enter</code></li><li>打开终端： <code>Ctrl + ` </code>； 新建终端： <code>Ctrl + Shift ` </code></li></ul><h2 id="pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm<a href="#pycharm" class="header-anchor">#</a></h2><ul><li>替换（重命名）： <code>Ctrl + R</code> ；全局替换：<code>Ctrl + Alt + R</code></li><li>查找： <code>Ctrl + F</code> ；全局查找： <code>Ctrl + Alt + F</code></li><li>打开设置： <code>Ctrl + Alt + S</code> （会与QQ截屏功能冲撞，且QQ优先级更高）</li></ul><h2 id="qt-creator"><a href="#Qt-Creator" class="headerlink" title="Qt Creator"></a>Qt Creator<a href="#qt-creator" class="header-anchor">#</a></h2><ul><li>帮助： <code>F1</code></li><li>转到源（头）文件： <code>F4</code></li></ul><h2 id="clion"><a href="#CLion" class="headerlink" title="CLion"></a>CLion<a href="#clion" class="header-anchor">#</a></h2><h2 id="visual-studio"><a href="#Visual-Studio" class="headerlink" title="Visual Studio"></a>Visual Studio<a href="#visual-studio" class="header-anchor">#</a></h2><h2 id="matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a>Matlab<a href="#matlab" class="header-anchor">#</a></h2><p>待续。。。</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/casual/">casual</category>
      
      
      <category domain="https://pezayo.com/tags/shortcuts/">shortcuts</category>
      
      
      <comments>https://pezayo.com/2022/05/28/%E6%B2%A1%E6%9C%89%E4%BD%A0%EF%BC%88%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%89%E6%88%91%E6%80%8E%E4%B9%88%E6%B4%BB/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo图片问题</title>
      <link>https://pezayo.com/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/</link>
      <guid>https://pezayo.com/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Fri, 08 Apr 2022 09:28:44 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;hexo-de-tu-pian-cha-ru-wen-ti&quot;&gt;&lt;a href=&quot;#hexo-的图片插入问题&quot; class=&quot;headerlink&quot; title=&quot;hexo 的图片插入问题&quot;&gt;&lt;/a&gt;hexo 的图片插入问题&lt;a href=&quot;#hexo-de-tu-pian-cha-ru-wen-ti&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;关于hexo中的图片插入还是比较迷。首先markdown的插入图片是绝对万能的。适用于博客上图片插入的markdown语法便是使用网图进行插入。下面这个便是一个网图的案例&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/08/lITCRnEyHS3Feoc.png&quot; alt=&quot;这是smms图床的网图&quot;&gt;&lt;/p&gt;
&lt;p&gt;好，除此之外，hexo还支持一些奇技淫巧的图片插入方法。其实也是我一直想要探究的如何将自己的图片托管的博客上，而不是在每次使用Typora插入图片自动使用图床上传生成一个随机url，使用博客进行 托管，那个url自然有规则一点，并且还可看出这张图片属于我。&lt;/p&gt;
&lt;p&gt;关于这种图片的插入。目前发现的方法是使用hexo支持的标签语法。&lt;code&gt;&amp;#123;% img /your-image.png the-description %&amp;#125;&lt;/code&gt;当然还有一些其他复杂的参数，比如高度宽度啥的，不过这都是次要的。其中那个图片前面的正斜杠是必要的。当然这一切都需要一个前提条件，就是你需要在hexo站点配置文件_config.yml中将&lt;code&gt;post_asset_folder&lt;/code&gt;的选项设置为&lt;code&gt;true&lt;/code&gt;。然后每次在git bash命令行中去&lt;code&gt;hexo new article-name&lt;/code&gt;新建一个文件时，其又会自动新建一个同名文件夹。同名文件夹中的图片可被这篇markdown读取，目前测试的是使用这个hexo语法标签才能引用到。然后我发现到的是，每次这样，在提交完后，进入github的部署文件中，发现其中的html文件与图片其实在一起，都在那个文件夹下。以下就是这个图片的hexo语法展示结果，显然这张图片在博客中可以看到，但在本地markdown编辑器中无法显示，&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="hexo-de-tu-pian-cha-ru-wen-ti"><a href="#hexo-的图片插入问题" class="headerlink" title="hexo 的图片插入问题"></a>hexo 的图片插入问题<a href="#hexo-de-tu-pian-cha-ru-wen-ti" class="header-anchor">#</a></h1><p>关于hexo中的图片插入还是比较迷。首先markdown的插入图片是绝对万能的。适用于博客上图片插入的markdown语法便是使用网图进行插入。下面这个便是一个网图的案例</p><p><img src="https://s2.loli.net/2022/04/08/lITCRnEyHS3Feoc.png" alt="这是smms图床的网图"></p><p>好，除此之外，hexo还支持一些奇技淫巧的图片插入方法。其实也是我一直想要探究的如何将自己的图片托管的博客上，而不是在每次使用Typora插入图片自动使用图床上传生成一个随机url，使用博客进行 托管，那个url自然有规则一点，并且还可看出这张图片属于我。</p><p>关于这种图片的插入。目前发现的方法是使用hexo支持的标签语法。<code>&#123;% img /your-image.png the-description %&#125;</code>当然还有一些其他复杂的参数，比如高度宽度啥的，不过这都是次要的。其中那个图片前面的正斜杠是必要的。当然这一切都需要一个前提条件，就是你需要在hexo站点配置文件_config.yml中将<code>post_asset_folder</code>的选项设置为<code>true</code>。然后每次在git bash命令行中去<code>hexo new article-name</code>新建一个文件时，其又会自动新建一个同名文件夹。同名文件夹中的图片可被这篇markdown读取，目前测试的是使用这个hexo语法标签才能引用到。然后我发现到的是，每次这样，在提交完后，进入github的部署文件中，发现其中的html文件与图片其实在一起，都在那个文件夹下。以下就是这个图片的hexo语法展示结果，显然这张图片在博客中可以看到，但在本地markdown编辑器中无法显示，</p><p>仅仅为纯文本内容。</p><img src="/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/hexoimage.jpg" class title="这是一个hexo语法下的图片"><p>另外，我再去使用markdown语法去这个文件目录下进行引用看看行不行。</p><p><img src="/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/hexoimage.jpg" alt="这是去同名文件夹引用"></p><p>目前就是这样。网上还说可以在source目录下新建一个文件夹专门放图片，然后使用绝对路径去引用，但貌似不行。比如这样</p><p><img src="/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/hexoimage2.jpg" alt="这是普通的markdown语法"></p><img src="/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/hexoimage2.jpg" class title="这是hexo语法标签"><p>到底行不行，一目了然。</p><p>就我而言，我也不知道，我会倾向于哪个。显然，我在本地编辑的时候，我肯定不想让我的一张图变成一个语法标签。但我这个网图上传到smms图床生成一堆乱码式的url就让我看着不爽，不够优雅。而用另一个可以在博客中看到图片的url非常优雅。。。但这个图片实际上还是在本地，不过其实也托管到GitHub上了，也算是一个图床了。我GitHub上原本就已经托管 了一个图床，现在还可以在这里进行托管。</p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/record/">record</category>
      
      
      <category domain="https://pezayo.com/tags/markdown/">markdown</category>
      
      <category domain="https://pezayo.com/tags/hexo/">hexo</category>
      
      
      <comments>https://pezayo.com/2022/04/08/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Changes or configuration in Ubuntu</title>
      <link>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/</link>
      <guid>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/</guid>
      <pubDate>Thu, 07 Apr 2022 17:55:08 GMT</pubDate>
      
      <description>some annoying details and some customize operation</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="changes-in-ubuntu"><a href="#Changes-in-Ubuntu" class="headerlink" title="Changes in Ubuntu"></a>Changes in Ubuntu<a href="#changes-in-ubuntu" class="header-anchor">#</a></h1><h2 id="gai-bian-terminal-de-yan-se-she-zhi"><a href="#改变terminal的颜色设置" class="headerlink" title="改变terminal的颜色设置"></a>改变terminal的颜色设置<a href="#gai-bian-terminal-de-yan-se-she-zhi" class="header-anchor">#</a></h2><p><a href="https://vitux.com/how-to-customize-ubuntu-bash-prompt/">How to Customize your Ubuntu Terminal Prompt</a></p><p>通过以上链接改变了prompts的字体颜色，由绿色改为蓝色，将PS1中的\u前的中括号内的32（绿色）改为34（蓝色）</p><img src="https://s2.loli.net/2022/04/08/YJytekO1lUCnpAf.png" alt="image-20220408020417360"><h2 id="aptitude"><a href="#aptitude" class="headerlink" title="aptitude"></a>aptitude<a href="#aptitude" class="header-anchor">#</a></h2><p>2022年3月5日，12点04分</p><p><code>sudo apt install aptitude</code> 下载安装了aptitude包管理工具</p><p>aptitude 相比apt拥有一个图形化界面，更加友好，且能直接显示已安装的包，未安装的包，待升级的包的数量。</p><h2 id="vim-themes"><a href="#vim-themes" class="headerlink" title="vim themes"></a>vim themes<a href="#vim-themes" class="header-anchor">#</a></h2><p>我突然想配置我的Vim的界面，于是我在下面链接找到教程</p><p><a href="https://www.freecodecamp.org/news/vimrc-configuration-guide-customize-your-vim-editor/">Vimrc Configuration Guide - How to Customize Your Vim Code Editor with Mappings, Vimscript, Status Line, and More</a></p><h1 id="sshd-config"><a href="#sshd-config" class="headerlink" title="sshd_config"></a>sshd_config<a href="#sshd-config" class="header-anchor">#</a></h1><p>修改sshd_config文件，修改后结果在下一页中</p><p><a href="https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/sshd_confi%20c24b2/">sshd_config</a></p><p>除此之外，还需要运行<code>sudo service sshd restart</code> 将ssh服务重新配置。</p><h2 id="wang-luo-wen-ti"><a href="#网络问题" class="headerlink" title="网络问题"></a>网络问题<a href="#wang-luo-wen-ti" class="header-anchor">#</a></h2><p>虚拟机网络出现大问题，使用NAT，桥接，hostonly都出现问题。反应为使用以下命令没有用。都显示Unit networking.service not found. 以下命令全部没用。以下命令均为从英文网站中找到的命令，检索信息为***.service not found</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart networking</span><br><span class="line">systemctl start NetworkManager</span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager</span><br><span class="line">service network restart</span><br><span class="line">sudo service network-manager stop</span><br></pre></td></tr></table></figure><p>除此之外，我还有去按照那些英文教程去改配置文件，表现为以下几个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">sudo vim /etc/systemd/network/05-eth0.network</span><br><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><blockquote><p>其中NetworkManager.conf中的内容为将false改为true，但我觉得是错误的做法。我后来又将其改了回来，即为保持这个文件默认不变。另外05-eth0.network文件原本不存在，我手动建立一个后填写东西后，显然我不会，我又将其删除。依然保持不变。</p></blockquote><p>最终的解决办法是在CSDN上找到，准确来说应该不是CSDN，而是我换了一个检索关键字，直接搜索<strong>网卡消失，</strong>所以这个问题的解决办法还是在interfaces中去进行更改，加上eth33选项。因为最初的症状表现为使用<code>ifconfig</code> 只能看到本地回环的网卡选项，而使用<code>ifconfig -a</code> 能看到ens33选项，但是上面的ip地址不合理。在interface中加入ens33后，再在命令行输入以下命令重新分配ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pzy111@pezayo:~$ sudo ifconfig ens33 up</span><br><span class="line">pzy111@pezayo:~$ sudo dhclient ens33</span><br><span class="line">pzy111@pezayo:~$ sudo ifconfig ens33</span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.8.128  netmask 255.255.255.0  broadcast 192.168.8.255</span><br><span class="line">        inet6 fe80::20c:29ff:feb4:6d14  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:b4:6d:14  txqueuelen 1000  (以太网)</span><br><span class="line">        RX packets 16  bytes 2177 (2.1 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 67  bytes 8824 (8.8 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>现在可以正常上网。</p><blockquote><p>注：此处仅仅是瞎碰出来的，他确实不稳定。</p></blockquote><p>系统启动时，网卡没有启动，每次网卡都没有自动获取到ip地址，都需要去进行手动的获取，使用<code>sudo dhclient ens33</code> 去获得ip地址。如果不行使用<code>sudo ifconfig ens33 up</code> 去启动网卡，把up改为down则为关闭网卡。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo lshw -C network     <span class="comment"># 检查网络配置</span></span><br><span class="line">$ sudo systemctl status systemd-networkd   <span class="comment"># 检查服务是否启动</span></span><br><span class="line">$ sudo systemctl start systemd-networkd</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> systemd-networkd</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/witton/article/details/109312331">虚拟机中安装的CentOS8无法启动网卡使用网络_witton的博客-CSDN博客_centos8 unmanaged</a></p><p>关于Ubuntu的网络配置，网上一致的说法为有两个可以配置的</p><ol><li>systemd-networkd系统层面的，即命令行层面的，调用&#x2F;etc&#x2F;network&#x2F;interfaces里的配置</li><li>NetworkManager，需要额外的去下载的，但一般带有桌面的系统自带。</li></ol><p>NetworkManager拥有更高的优先级，即他存在时，另一个将不工作。但是如果&#x2F;etc&#x2F;network&#x2F;interfaces被改动了，则会被挤下去。此时需要去&#x2F;etc&#x2F;NetworkManager&#x2F;NetworkManager.conf文件中去更改，将managed设置为true，即使他仍然可以接管。</p><blockquote><p>另外关于我的虚拟机上出现的问题，表现为我的有线连接无法被识别，无法被托管。我最终在上面这个CSDN中找到解答。我输入nmcli 显示lo 和 ens33 均未托管。但是我在输入nmcli n显示enable，此时只需要输入nmcli n on 即可重启我的服务。有线连接立马出来，立竿见影！！</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/Ubuntu/">Ubuntu</category>
      
      
      
      <comments>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sshd_config content</title>
      <link>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/sshd_confi%20c24b2/</link>
      <guid>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/sshd_confi%20c24b2/</guid>
      <pubDate>Thu, 07 Apr 2022 17:55:08 GMT</pubDate>
      
      <description>这是Ubuntu中关于ssh服务端的本地配置文件。这里是在原本默认的基础上做出的微小改动用以开启ssh服务的配置。</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="sshd-config"><a href="#sshd-config" class="headerlink" title="sshd_config"></a>sshd_config<a href="#sshd-config" class="header-anchor">#</a></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the sshd server system-wide configuration file.  See</span></span><br><span class="line"><span class="comment"># sshd_config(5) for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The strategy used for options in the default sshd_config shipped with</span></span><br><span class="line"><span class="comment"># OpenSSH is to specify options with their default value where</span></span><br><span class="line"><span class="comment"># possible, but leave them commented.  Uncommented options override the</span></span><br><span class="line"><span class="comment"># default value.</span></span><br><span class="line"></span><br><span class="line">Include /etc/ssh/sshd_config.d/*.conf</span><br><span class="line"></span><br><span class="line">Port 22</span><br><span class="line"><span class="comment">#AddressFamily any</span></span><br><span class="line"><span class="comment">#ListenAddress 0.0.0.0</span></span><br><span class="line"><span class="comment">#ListenAddress ::</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#HostKey /etc/ssh/ssh_host_rsa_key</span></span><br><span class="line"><span class="comment">#HostKey /etc/ssh/ssh_host_ecdsa_key</span></span><br><span class="line"><span class="comment">#HostKey /etc/ssh/ssh_host_ed25519_key</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ciphers and keying</span></span><br><span class="line"><span class="comment">#RekeyLimit default none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging</span></span><br><span class="line"><span class="comment">#SyslogFacility AUTH</span></span><br><span class="line"><span class="comment">#LogLevel INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LoginGraceTime 2m</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">StrictModes <span class="built_in">yes</span></span><br><span class="line"><span class="comment">#MaxAuthTries 6</span></span><br><span class="line"><span class="comment">#MaxSessions 10</span></span><br><span class="line"></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Expect .ssh/authorized_keys2 to be disregarded by default in future.</span></span><br><span class="line"><span class="comment">#AuthorizedKeysFile.ssh/authorized_keys .ssh/authorized_keys2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#AuthorizedPrincipalsFile none</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#AuthorizedKeysCommand none</span></span><br><span class="line"><span class="comment">#AuthorizedKeysCommandUser nobody</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For this to work you will also need host keys in /etc/ssh/ssh_known_hosts</span></span><br><span class="line"><span class="comment">#HostbasedAuthentication no</span></span><br><span class="line"><span class="comment"># Change to yes if you don&#x27;t trust ~/.ssh/known_hosts for</span></span><br><span class="line"><span class="comment"># HostbasedAuthentication</span></span><br><span class="line"><span class="comment">#IgnoreUserKnownHosts no</span></span><br><span class="line"><span class="comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span></span><br><span class="line"><span class="comment">#IgnoreRhosts yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To disable tunneled clear text passwords, change to no here!</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line"><span class="comment">#PermitEmptyPasswords no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to yes to enable challenge-response passwords (beware issues with</span></span><br><span class="line"><span class="comment"># some PAM modules and threads)</span></span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kerberos options</span></span><br><span class="line"><span class="comment">#KerberosAuthentication no</span></span><br><span class="line"><span class="comment">#KerberosOrLocalPasswd yes</span></span><br><span class="line"><span class="comment">#KerberosTicketCleanup yes</span></span><br><span class="line"><span class="comment">#KerberosGetAFSToken no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GSSAPI options</span></span><br><span class="line"><span class="comment">#GSSAPIAuthentication no</span></span><br><span class="line"><span class="comment">#GSSAPICleanupCredentials yes</span></span><br><span class="line"><span class="comment">#GSSAPIStrictAcceptorCheck yes</span></span><br><span class="line"><span class="comment">#GSSAPIKeyExchange no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set this to &#x27;yes&#x27; to enable PAM authentication, account processing,</span></span><br><span class="line"><span class="comment"># and session processing. If this is enabled, PAM authentication will</span></span><br><span class="line"><span class="comment"># be allowed through the ChallengeResponseAuthentication and</span></span><br><span class="line"><span class="comment"># PasswordAuthentication.  Depending on your PAM configuration,</span></span><br><span class="line"><span class="comment"># PAM authentication via ChallengeResponseAuthentication may bypass</span></span><br><span class="line"><span class="comment"># the setting of &quot;PermitRootLogin without-password&quot;.</span></span><br><span class="line"><span class="comment"># If you just want the PAM account and session checks to run without</span></span><br><span class="line"><span class="comment"># PAM authentication, then enable this but set PasswordAuthentication</span></span><br><span class="line"><span class="comment"># and ChallengeResponseAuthentication to &#x27;no&#x27;.</span></span><br><span class="line">UsePAM <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#AllowAgentForwarding yes</span></span><br><span class="line"><span class="comment">#AllowTcpForwarding yes</span></span><br><span class="line"><span class="comment">#GatewayPorts no</span></span><br><span class="line">X11Forwarding <span class="built_in">yes</span></span><br><span class="line"><span class="comment">#X11DisplayOffset 10</span></span><br><span class="line"><span class="comment">#X11UseLocalhost yes</span></span><br><span class="line"><span class="comment">#PermitTTY yes</span></span><br><span class="line">PrintMotd no</span><br><span class="line"><span class="comment">#PrintLastLog yes</span></span><br><span class="line"><span class="comment">#TCPKeepAlive yes</span></span><br><span class="line"><span class="comment">#PermitUserEnvironment no</span></span><br><span class="line"><span class="comment">#Compression delayed</span></span><br><span class="line"><span class="comment">#ClientAliveInterval 0</span></span><br><span class="line"><span class="comment">#ClientAliveCountMax 3</span></span><br><span class="line"><span class="comment">#UseDNS no</span></span><br><span class="line"><span class="comment">#PidFile /var/run/sshd.pid</span></span><br><span class="line"><span class="comment">#MaxStartups 10:30:100</span></span><br><span class="line"><span class="comment">#PermitTunnel no</span></span><br><span class="line"><span class="comment">#ChrootDirectory none</span></span><br><span class="line"><span class="comment">#VersionAddendum none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># no default banner path</span></span><br><span class="line"><span class="comment">#Banner none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow client to pass locale environment variables</span></span><br><span class="line">AcceptEnv LANG LC_*</span><br><span class="line"></span><br><span class="line"><span class="comment"># override default of no subsystems</span></span><br><span class="line">Subsystemsftp/usr/lib/openssh/sftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of overriding settings on a per-user basis</span></span><br><span class="line"><span class="comment">#Match User anoncvs</span></span><br><span class="line"><span class="comment">#X11Forwarding no</span></span><br><span class="line"><span class="comment">#AllowTcpForwarding no</span></span><br><span class="line"><span class="comment">#PermitTTY no</span></span><br><span class="line"><span class="comment">#ForceCommand cvs server</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/Ubuntu/">Ubuntu</category>
      
      
      <category domain="https://pezayo.com/tags/ssh/">ssh</category>
      
      <category domain="https://pezayo.com/tags/code-file/">code file</category>
      
      
      <comments>https://pezayo.com/2022/04/08/Changes%20in%20Ubuntu/sshd_confi%20c24b2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Multisim安装(保姆级)</title>
      <link>https://pezayo.com/2022/03/28/Multisim%E5%AE%89%E8%A3%85(%E4%BF%9D%E5%A7%86%E7%BA%A7)/</link>
      <guid>https://pezayo.com/2022/03/28/Multisim%E5%AE%89%E8%A3%85(%E4%BF%9D%E5%A7%86%E7%BA%A7)/</guid>
      <pubDate>Mon, 28 Mar 2022 06:23:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;multisim-an-zhuang-bao-mu-ji&quot;&gt;&lt;a href=&quot;#Multisim安装（保姆级）&quot; class=&quot;headerlink&quot; title=&quot;Multisim安装（保姆级）&quot;&gt;&lt;/a&gt;Multisim安装（保姆级）&lt;a href=&quot;#multisim-an-zhuang-bao-mu-ji&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#dao-yan&quot;&gt;导言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#zheng-pian-kai-shi&quot;&gt;正片开始&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#multisim-jian-jie&quot;&gt;Multisim简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#zheng-pian-zhen-de-kai-shi-liao&quot;&gt;正片真的开始了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#span-id-here-zhe-li-zheng-chang-zhuang-tai-an-zhuang-span&quot;&gt;&lt;span id=&quot;here&quot;&gt;这里（正常状态安装）&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#span-id-there-na-li-fei-zheng-chang-zhuang-tai-an-zhuang-span&quot;&gt;&lt;span id=&quot;there&quot;&gt;那里（非正常状态安装）&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#jie-yu&quot;&gt;结语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;

&lt;/div&gt;

&lt;h2 id=&quot;dao-yan&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;a href=&quot;#dao-yan&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;这篇文档和软件我放在了一起，但假如你只看到了别人转给你的这篇文档的话，首先给出&lt;a href=&quot;https://box.nju.edu.cn/d/b5be45d9f5aa49c89082/&quot;&gt;软件链接&lt;/a&gt;（和这篇文档在一块的）。以下所有需要用到的软件都在这。&lt;/p&gt;
&lt;p&gt;&amp;lt;– more –&amp;gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="multisim-an-zhuang-bao-mu-ji"><a href="#Multisim安装（保姆级）" class="headerlink" title="Multisim安装（保姆级）"></a>Multisim安装（保姆级）<a href="#multisim-an-zhuang-bao-mu-ji" class="header-anchor">#</a></h1><div class="toc"><!-- toc --><ul><li><a href="#dao-yan">导言</a></li><li><a href="#zheng-pian-kai-shi">正片开始</a><ul><li><a href="#multisim-jian-jie">Multisim简介</a></li><li><a href="#zheng-pian-zhen-de-kai-shi-liao">正片真的开始了</a></li><li><a href="#span-id-here-zhe-li-zheng-chang-zhuang-tai-an-zhuang-span"><span id="here">这里（正常状态安装）</span></a></li><li><a href="#span-id-there-na-li-fei-zheng-chang-zhuang-tai-an-zhuang-span"><span id="there">那里（非正常状态安装）</span></a></li></ul></li><li><a href="#jie-yu">结语</a></li></ul><!-- tocstop --></div><h2 id="dao-yan"><a href="#导言" class="headerlink" title="导言"></a>导言<a href="#dao-yan" class="header-anchor">#</a></h2><p>这篇文档和软件我放在了一起，但假如你只看到了别人转给你的这篇文档的话，首先给出<a href="https://box.nju.edu.cn/d/b5be45d9f5aa49c89082/">软件链接</a>（和这篇文档在一块的）。以下所有需要用到的软件都在这。</p><p>&lt;– more –&gt;</p><blockquote><p>关于Multisim的安装对我来说是一个痛苦但也有趣的回忆。于是我不得不想写下一篇markdown来记录一下，或许还可以对其他需要的人起到一些帮助作用。</p></blockquote><p>关于其中涉及到的软件在各个课程群中应该都有，尤其是郑江老师（我目前也就只上过郑老师的课）的课程群中都可以找到。我只是把这些东西集合打包在一起，目前来看，可以实现正常安装并且解决所有Multisim安装的问题（包你安装成功，不可能不成功）</p><h2 id="zheng-pian-kai-shi"><a href="#正片开始" class="headerlink" title="正片开始"></a>正片开始<a href="#zheng-pian-kai-shi" class="header-anchor">#</a></h2><h3 id="multisim-jian-jie"><a href="#Multisim简介" class="headerlink" title="Multisim简介"></a>Multisim简介<a href="#multisim-jian-jie" class="header-anchor">#</a></h3><p>地球人都知道，南大电子基础实验课用的就是Multisim（万恶之源），Mulitisim是由<a href="https://www.ni.com/zh-cn.html">NI</a>（National Instrument）公司推出的用来进行电路仿真的一个玩意，因为好用，所以就来荼毒你南学子了。[&#x2F;幽灵]</p><p>Multisim模电，数电实验课程都需要使用（工作量极大），但仅仅是基础课程，用来学习时使用的，后面貌似就不怎么使用了。然而除了使用，这玩意还安装起来贼能治低血压。（因为大家都说重装能解决多少多少问题，操作系统都能重装解决问题，但是这个玩意重装却能衍生问题）</p><p><em><strong>以下很重要（very very and very zhongyao）</strong></em></p><p>目前为止，<strong>强烈建议大家安装Mulitisim14.2教育版</strong>，其他的版本（包括专业版，就是pro版本）根本没有安装的必要（假如你是正正经经上实验课，不乱搞事，比如自己用软件研发一些东西啊，咋的咋的）。模电课程什么版本不重要，数电课程<strong>必须要教育版</strong>，只有教育版才有必须的PLD模块。并且14.2版本可以联动较新的vivado（2019）。</p><blockquote><p>于 22 年暑期更新，目前 Multisim 已经更新到14.3版本了，这个版本是否能够使用 activator 进行激活尚未测试，喜欢整活的朋友可以试一下。<strong>但就教学来看，14.2 肯定完全够用。</strong>另外我还在官网发现了 NI 公司已经推出了<a href="https://www.ni.com/zh-cn/support/downloads/software-products/download.academic-volume-license.html#312332">院校批量许可证 </a> ，大家觉得有必要可以考虑叫学校进行购买。（别想啦，不可能哒）</p></blockquote><ol><li>假如你对自己电脑下载软件存储比较注意的话，比如你会刻意把软件路径改到D盘而不是默认的C盘，好，那么我<strong>建议</strong>你把Multisim安装到C盘，并且是默认安装，不要去手动更改路径。原因很简单，反正你C盘也空着的，Multisim这玩意也不大，1个G都没有，放C盘就放C盘呗。</li><li>假如你是另一类型的，日常喜欢无脑安装的，导致C盘红掉并且经常很狼狈的去C盘删文件腾空间的类型。那么，很好，我建议你也把Multisim安装到C盘，并且也是默认安装。原因很简单，你本来就是喜欢这么做，谁也拦不住你啊。[&#x2F;滑稽保命]</li></ol><p>说了这么多，其实就是<strong>把Multisim放C盘</strong>，好处只有一个，可以后台调用vivado<em><strong>（关于vivado的调用存在错误，应该是vivado装在C盘才可被Multisim识别调用，至于Multisim的安装位置没有强制要求，但为了省去不必要的麻烦还请按照本文档说明的来最好）</strong></em>可以<strong>震惊小伙伴们</strong>（哇塞！你的电脑自己就可以做数电实验了耶！）实验室电脑相对比较<strong>差劲</strong>，用自己的电脑做比较省事，并且免去到时候要去借别人U盘拷你电脑上的仿真文件到实验室电脑上的繁琐流程了。（社恐人狂喜）</p><h3 id="zheng-pian-zhen-de-kai-shi-liao"><a href="#正片真的开始了" class="headerlink" title="正片真的开始了"></a>正片真的开始了<a href="#zheng-pian-zhen-de-kai-shi-liao" class="header-anchor">#</a></h3><blockquote><p>环境：Windows10系统（Windows11尚未测试）</p><p>容量：小于 1G 即可</p><p>注意：如果你是 Mac 用户，那么你很不幸，Mac 并不支持Multisim的安装，会因为 ARM 架构的原因，哪怕使用虚拟机装个 Win10 都不行。<strong>所以不建议像电子这种专业的同学使用 Mac，很多工程软件并未提供对 Mac 的接口。</strong></p></blockquote><ol><li>假如你此前没有安装过Multisim的话，那么恭喜你荣膺<strong>“电脑目前为止还很干净”</strong>称号。请看<a href="#here">这里</a></li><li>假如你此前安装过Multisim（不论成功与否，只要你双击过安装程序且安装程序开始进行了）的话，想要切换成教育版版本但是安装失败，或者就是安装失败，那么恭喜你荣膺<strong>“电脑目前为止还有救”</strong>称号。可以看<a href="#there">那里</a>。</li></ol><h3 id="zhe-li-zheng-chang-zhuang-tai-an-zhuang"><a href="#这里（正常状态安装）" class="headerlink" title="这里（正常状态安装）"></a><span id="here">这里（正常状态安装）</span><a href="#zhe-li-zheng-chang-zhuang-tai-an-zhuang" class="header-anchor">#</a></h3><p>首先肯定是要下载Multisim14.2教育版啦。但这里用到的安装包，还需要另一个工具，就是NI公司的另一个产品，NI Package Manager。仅仅是这里，因为这个安装包是借助Package Manager安装的。</p><p><img src="https://s2.loli.net/2022/02/14/4jLAScqsDmKNx7z.png" alt="image-20220214203549737"></p><ol><li>首先下载安装package manager，（假如你之前就安装过电脑里就有就不用了）。就是图片最下面那个。下载后直接双击安装即可。无脑就行。</li><li>然后就可以下载Multisim14.2教育版啦，下载倒数第二个，双击点开挂载iso盘，然后双击其中名为 <code>install</code> 的可执行文件就可以安装了，仍然无脑，看到是啥点啥就行了。</li><li>激活（必须要激活，为供广大师生教学使用，懂得都懂），下载第三个，然后同样双击打开，选择对应的Multisim和Ultiborad版本<strong>右键激活</strong>就行了。（PS： Ultiborad 是一个已经被淘汰的东西，但还是激活好一点，凑个数）</li><li>汉化，激活后你打开发现是英文的，从小到大学了十多年的中文的我一时看到英文不适应怎么办，别急，有办法汉化。下载Chinese.7z，这是我使用7zip打包后的，下载后需要先解压，推荐使用7zip，解压后是一个文件夹，直接复制粘贴进C:\program files(x86)\National Instruments\Circuit Design Suite 14.2\stringfiles中就行了。就是放进这个stringfiles里面，默认安装的就是上面这个路径。</li><li>开始做实验。（大功告成）</li></ol><h3 id="na-li-fei-zheng-chang-zhuang-tai-an-zhuang"><a href="#那里（非正常状态安装）" class="headerlink" title="那里（非正常状态安装）"></a><span id="there">那里（非正常状态安装）</span><a href="#na-li-fei-zheng-chang-zhuang-tai-an-zhuang" class="header-anchor">#</a></h3><p>由于你之前安装过Multisim，但是你不小心卸载了，或者出了问题以及想换个版本于是想卸载，这时候你卸载了，然后发现安装不上去了。那么，很好，这里可以解决你的问题。（不做绝对保证，但从经验上，我给别人都是这么完美解决的）</p><p>你卸载方式不对，你应该是使用了控制面板进行卸载，或者一些安全软件进行卸载。<strong>这些东西卸不干净</strong>，所以不能再安装上新的Multisim。</p><p>实际上NI公司很人性化，专门推出一款内部消化型程序——万能的卸载程序。就是图片中第一个，你看人家名字都叫<strong>NI系列卸载软件</strong>。他卸载的十分干净。</p><p> 打开其中的<code>uninst.exe</code>，打开后界面如图所示。如图中，选中NI Circuit Design Suite 的版本点击<code>remove</code>即可。</p><blockquote><p>一般都是你之前卸载不干净的版本，也正是你没卸载干净，所以这个框里显示着这个版本的Multisim还在，所以你也就安装不了其他的版本上去了。</p></blockquote><div align="center">    <img src="https://s2.loli.net/2022/02/14/3tSbPT4ZFpu9Wlh.png" width="500" alt="图片名称"></div><p>注意，只需要卸载NI Circuit Design Suite 就够了，<strong>其他的软件一律不要卸载</strong>啊，跟他们没关系啊（其他NI软件：你不要过来啊啊！）</p><p>现在卸载已经完成了，接下来，你的电脑又回到了第一次安装Multisim的状态，照着<a href="#here">这里</a>的方法来一遍就行了。</p><blockquote><p>当然，假如还出错的话，这时候，出错方式应该是已经安装上了，但是打不开文件（大部分情况下应该是数电实验文件附带PLD模块），应该是labview或其驱动没有安装，再用package manager 搜索下载安装labview还有驱动就可以了。大部分情况下应该是下载Labview Runtime。有关于labview的安装，课程群里以及网上应该有很多教程可以找到。要善于搜索啊</p></blockquote><h2 id="jie-yu"><a href="#结语" class="headerlink" title="结语"></a>结语<a href="#jie-yu" class="header-anchor">#</a></h2><p>内容应该就是这么多。主要就是安装。安装出错就是因为没卸载干净，需要用专门软件进行卸载。卸载完后就可以重装了（所以重装其实是能解决问题的，只要你是真·卸载就行）</p><p>祝大家数电，模电实验Multisim使用愉快！祝大家学业进步！</p><p>如果大家还遇到什么问题，可以发邮件给我，我看到了会及时进行回复的。</p><p>假如想要我联系方式的，也可以发邮箱给我，我会回复我的QQ和微信的。</p><p>这是我的南大邮箱：<a href="mailto:&#x32;&#x30;&#x31;&#x31;&#56;&#48;&#x30;&#x37;&#48;&#64;&#115;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x6e;&#x6a;&#117;&#46;&#101;&#100;&#x75;&#46;&#99;&#110;">&#x32;&#x30;&#x31;&#x31;&#56;&#48;&#x30;&#x37;&#48;&#64;&#115;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x6e;&#x6a;&#117;&#46;&#101;&#100;&#x75;&#46;&#99;&#110;</a></p>]]></content:encoded>
      
      
      <category domain="https://pezayo.com/categories/software/">software</category>
      
      
      <category domain="https://pezayo.com/tags/install-software/">install software</category>
      
      
      <comments>https://pezayo.com/2022/03/28/Multisim%E5%AE%89%E8%A3%85(%E4%BF%9D%E5%A7%86%E7%BA%A7)/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
